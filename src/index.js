// @flow

import fetch from "node-fetch";
import TelegramBot from "node-telegram-bot-api";
import Agent from "socks5-https-client/lib/Agent";
import net from "netVariants";
import trista from "tristaVariants";
import config from "config";

process.env["NTBA_FIX_319"] = "1";
const { token, socksHost, socksPort, socksUsername, socksPassword } = config;

const bot = new TelegramBot(token, {
  polling: true,
  request: {
    agentClass: Agent,
    agentOptions: {
      socksHost,
      socksPort,
      socksUsername,
      socksPassword,
    },
  },
});

function getRandomNumber(max: number, min: number): number {
  return Math.floor(Math.random() * (max - min)) + min;
}

bot.on("message", msg => {
  // bot.sendMessage(168224148, JSON.stringify(msg));
  const { message_id, chat, text } = msg;
  const string = text.replace(/[^\w–∞-—è]+/gi, "").toLowerCase();
  const { id: chatId } = chat;

  function sendMessage(text: string) {
    bot.sendMessage(chatId, text, { reply_to_message_id: message_id });
  }

  if (string.includes("–µ—Ç–æ–Ω–µ—á–∞—Ç")) {
    bot.setChatTitle(chatId, text);
  }

  if (string.includes("—Å–ª–∞–≤–∞—É–∫—Ä–∞–∏–Ω–µ")) {
    sendMessage("–ì–ï–†–û–Ø–ú –°–õ–ê–í–ê! üá∫üá¶");
  }

  if (string.includes("–∫–æ—Ä–≥–∏")) {
    fetch("https://dog.ceo/api/breed/corgi/cardigan/images/random")
      .then(data => data.json())
      .then(data => sendMessage(data.message.replace(`\/`, "")))
      .catch(e => console.error(e));
  }

  if (
    string.includes("—Å–∏–±–∞") ||
    string.includes("—Å–∏–±—É") ||
    string.includes("—à–∏–±–∞") ||
    string.includes("—Å–∏–±—É—à–∫–∞") ||
    string.includes("—à–∏–±—É—à–∫–∞")
  ) {
    fetch("http://shibe.online/api/shibes?count=1&urls=true&httpsUrls=false")
      .then(data => data.json())
      .then(data => sendMessage(data[0]))
      .catch(e => console.error(e));
  }

  if (
    string.includes("–ø–∏–¥–æ—Ä") ||
    string.includes("–ø–∏–¥—Ä") ||
    string.includes("–Ω–∏–≥–µ—Ä") ||
    string.includes("–Ω–∏–≥–≥–∞")
  ) {
    sendMessage("—ç—Ç–æ —Ö–µ–π—Ç—Å–ø–∏—á –ø—Ä–∏—è—Ç–µ–ª—å");
  }

  if (string.includes("—á–µ–ª—ã–±–∏—à—å—Å—è") || string.includes("—á–æ–ª—ã–±–∏—à—Å–æ")) {
    sendMessage("–≤–µ—Å–µ–ª–æ –∂–µ");
  }

  if (string.includes("—Ç—Ä–∏—Å—Ç–∞")) {
    sendMessage(trista[getRandomNumber(0, trista.length)]);
  }

  if (string.includes("–ø–∏–∑–¥–∞")) {
    sendMessage("–∞ –¥–∞–≤–∞–π—Ç–µ –Ω–µ –º–∞—Ç–µ—Ä–∏—Ç—å—Å—è");
    return;
  }

  //–¥–∞ ‚Äî –∞–Ω–≥–ª–∏–π—Å–∫–∞—è –ê
  if (string.slice(-2) === "–¥–∞" || string.slice(-2) === "–¥a") {
    sendMessage("–ø–∏–∑–¥–∞");
  }

  if (string.slice(-3) === "–Ω–µ—Ç") {
    sendMessage(net[getRandomNumber(0, net.length)]);
  }
});

bot.sendMessage(168224148, "nechatbot –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ");
